{"remainingRequest":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/babel-loader/lib/index.js!/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/eslint-loader/index.js??ref--13-0!/Users/mustafacan/Documents/WebstormProjects/forumvue/src/router/index.js","dependencies":[{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/src/router/index.js","mtime":1596124519991},{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBSb3V0ZXIgZnJvbSAndnVlLXJvdXRlcic7CmltcG9ydCBUaHJlYWRzIGZyb20gIkAvY29tcG9uZW50cy9UaHJlYWRzIjsKaW1wb3J0IHN0b3JlIGZyb20gIkAvc3RvcmUiOwpWdWUudXNlKFJvdXRlcik7CmV4cG9ydCBkZWZhdWx0IG5ldyBSb3V0ZXIoewogIHNjcm9sbEJlaGF2aW9yOiBmdW5jdGlvbiBzY3JvbGxCZWhhdmlvcigpIHsKICAgIHJldHVybiB7CiAgICAgIHg6IDAsCiAgICAgIHk6IDAKICAgIH07CiAgfSwKICBtb2RlOiAnaGlzdG9yeScsCiAgcm91dGVzOiBbewogICAgcGF0aDogJy8nLAogICAgbmFtZTogJ1RocmVhZHMnLAogICAgY29tcG9uZW50OiBUaHJlYWRzCiAgfSwgewogICAgcGF0aDogJy90aHJlYWQvOnRpdGxlJywKICAgIG5hbWU6ICdUaHJlYWREZXRhaWwnLAogICAgcHJvcHM6IHRydWUsCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgKICAgICAgLyogd2VicGFja0NodW5rTmFtZTogIkRlc3RpbmF0aW9uRGV0YWlscyIqLwogICAgICAiQC9jb21wb25lbnRzL1RocmVhZERldGFpbCIpOwogICAgfSwKICAgIGJlZm9yZUVudGVyOiBmdW5jdGlvbiBiZWZvcmVFbnRlcih0bywgZnJvbSwgbmV4dCkgewogICAgICB2YXIgZXhpc3RzID0gc3RvcmUudGhyZWFkcy5maW5kKGZ1bmN0aW9uICh0aHJlYWQpIHsKICAgICAgICByZXR1cm4gdGhyZWFkLnRpdGxlID09PSB0by5wYXJhbXMudGl0bGU7CiAgICAgIH0pOwoKICAgICAgaWYgKGV4aXN0cykgewogICAgICAgIG5leHQoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBuZXh0KHsKICAgICAgICAgIG5hbWU6ICJub3RGb3VuZCIKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH1dCn0pOw=="},{"version":3,"sources":["/Users/mustafacan/Documents/WebstormProjects/forumvue/src/router/index.js"],"names":["Vue","Router","Threads","store","use","scrollBehavior","x","y","mode","routes","path","name","component","props","beforeEnter","to","from","next","exists","threads","find","thread","title","params"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEAH,GAAG,CAACI,GAAJ,CAAQH,MAAR;AAEA,eAAe,IAAIA,MAAJ,CAAW;AACtBI,EAAAA,cADsB,4BACJ;AACd,WAAO;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAP;AACH,GAHqB;AAItBC,EAAAA,IAAI,EAAE,SAJgB;AAKtBC,EAAAA,MAAM,EAAE,CACJ;AACIC,IAAAA,IAAI,EAAE,GADV;AAEIC,IAAAA,IAAI,EAAE,SAFV;AAGIC,IAAAA,SAAS,EAAEV;AAHf,GADI,EAMJ;AACIQ,IAAAA,IAAI,EAAE,gBADV;AAEIC,IAAAA,IAAI,EAAE,cAFV;AAGIE,IAAAA,KAAK,EAAE,IAHX;AAIID,IAAAA,SAAS,EAAE;AAAA,aACP;AAAO;AAA4C,iCAAnD,CADO;AAAA,KAJf;AAMIE,IAAAA,WAAW,EAAE,qBAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAC7B,UAAMC,MAAM,GAAGf,KAAK,CAACgB,OAAN,CAAcC,IAAd,CACX,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACC,KAAP,KAAiBP,EAAE,CAACQ,MAAH,CAAUD,KAA/B;AAAA,OADK,CAAf;;AAGA,UAAIJ,MAAJ,EAAY;AACRD,QAAAA,IAAI;AACP,OAFD,MAEO;AACHA,QAAAA,IAAI,CAAC;AAAEN,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAJ;AACH;AACJ;AAfL,GANI;AALc,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Threads from \"@/components/Threads\";\nimport store from \"@/store\";\n\nVue.use(Router)\n\nexport default new Router({\n    scrollBehavior () {\n        return { x: 0, y: 0 }\n    },\n    mode: 'history',\n    routes: [\n        {\n            path: '/',\n            name: 'Threads',\n            component: Threads\n        },\n        {\n            path: '/thread/:title',\n            name: 'ThreadDetail',\n            props: true,\n            component: () =>\n                import(/* webpackChunkName: \"DestinationDetails\"*/ \"@/components/ThreadDetail\"),\n            beforeEnter: (to, from, next) => {\n                const exists = store.threads.find(\n                    thread => thread.title === to.params.title\n                );\n                if (exists) {\n                    next();\n                } else {\n                    next({ name: \"notFound\" });\n                }\n            }\n        }\n    ],\n\n\n})\n"]}]}