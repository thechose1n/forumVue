{"remainingRequest":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mustafacan/Documents/WebstormProjects/forumvue/src/components/Threads.vue?vue&type=style&index=0&id=0a01e929&scoped=true&lang=css&","dependencies":[{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/src/components/Threads.vue","mtime":1596124133416},{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mustafacan/Documents/WebstormProjects/forumvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jcmVhdGUgewogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQoKLnRocmVhZHMgewogICAgd2lkdGg6IDMwJTsKICAgIG1hcmdpbi1sZWZ0OiAxMHB4OwogICAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKYSB7CiAgICBjb2xvcjogYmxhY2s7CiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7Cn0KCg=="},{"version":3,"sources":["Threads.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Threads.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <b-button class=\"create\" variant=\"primary\" v-b-modal.modal-prevent-closing>Erstellen</b-button>\n        <b-card-group deck>\n            <div class=\"threads\" v-for=\"thread in threads\" :key=\"thread.title\">\n                <router-link\n                        :to=\"{\n            name: 'ThreadDetail',\n            params: { title: thread.title }\n          }\"\n                >\n                    <b-card bg-variant=\"default\" text-variant=\"black\" :header=\"thread.title\" class=\"text-center\">\n                        <b-card-text>{{thread.content}}</b-card-text>\n                    </b-card>\n                </router-link>\n            </div>\n        </b-card-group>\n        <b-modal\n                id=\"modal-prevent-closing\"\n                ref=\"modal\"\n                title=\"Submit Your Name\"\n                @show=\"resetModal\"\n                @hidden=\"resetModal\"\n                @ok=\"handleOk\"\n        >\n            <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\n                <b-form-group\n                        :state=\"titleState\"\n                        label=\"Titel\"\n                        label-for=\"title-input\"\n                        invalid-feedback=\"Titel wird benötigt\"\n                >\n                    <b-form-input\n                            id=\"title-input\"\n                            v-model=\"title\"\n                            :state=\"titleState\"\n                            required\n                    ></b-form-input>\n                </b-form-group>\n\n                <b-form-group\n                        :state=\"contentState\"\n                        label=\"Inhalt\"\n                        label-for=\"content-input\"\n                        invalid-feedback=\"Inhalt wird benötigt\"\n                >\n                    <b-form-input\n                            id=\"content-input\"\n                            v-model=\"content\"\n                            :state=\"contentState\"\n                            required\n                    ></b-form-input>\n                </b-form-group>\n            </form>\n        </b-modal>\n    </div>\n</template>\n\n<script>\n    import store from \"@/store\"\n\n    export default {\n        name: \"Threads\",\n        data () {\n            return {\n                title: '',\n                content: '',\n                titleState: null,\n                contentState: null,\n                threads: store.threads,\n            }\n        },\n        methods: {\n            checkFormValidity() {\n                const valid = this.$refs.form.checkValidity()\n                this.titleState = valid\n                this.contentState = valid\n                return valid\n            },\n            resetModal() {\n                this.title = ''\n                this.content = ''\n                this.titleState = null\n                this.contentState = null\n            },\n            handleOk(bvModalEvt) {\n                // Prevent modal from closing\n                bvModalEvt.preventDefault()\n                // Trigger submit handler\n                this.handleSubmit()\n            },\n            handleSubmit() {\n                // Exit when the form isn't valid\n                if (!this.checkFormValidity()) {\n                    return\n                }\n                // Push the name to submitted names\n                this.threads.push({id: this.id, title: this.title, content: this.content})\n                // Hide the modal manually\n                this.$nextTick(() => {\n                    this.$bvModal.hide('modal-prevent-closing')\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n    .create {\n        margin-left: 10px;\n        margin-top: 10px;\n        margin-bottom: 10px;\n    }\n\n    .threads {\n        width: 30%;\n        margin-left: 10px;\n        margin-bottom: 20px;\n    }\n\n    a {\n        color: black;\n        text-decoration: none;\n    }\n\n</style>\n"]}]}